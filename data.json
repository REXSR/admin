const Discord = require('discord.js');

const bot = new Discord.Client();

const client = new Discord.Client();

const prefix = '+'

client.on('ready', () => {

  console.log('╔[════════════════════════════════════]╗');

  console.log('')

  console.log('            ╔[════════════]╗')

  console.log('              Bot Is Online')

  console.log('            ╚[════════════]╝')

  console.log('')

  console.log(`Logged in as ${client.user.tag}!`);

  console.log('')

  console.log(`servers! [ " ${client.guilds.size} " ]`);

  console.log('')

  console.log(`Users! [ " ${client.users.size} " ]`);

  console.log('')

  console.log('╚[════════════════════════════════════]╝')

});







client.on('guildMemberRemove', (u) => {

    u.guild.fetchAuditLogs().then( s => {

        var ss = s.entries.first();

        if (ss.action == `MEMBER_KICK`) {

        if (!data[ss.executor.id]) {

            data[ss.executor.id] = {

            time : 1

          };

      } else {

          data[ss.executor.id].time+=1

      };

data[ss.executor.id].time = 0

u.guild.members.get(ss.executor.id).roles.forEach(r => {

                r.edit({

                    permissions : []

                });

                data[ss.executor.id].time = 0

            });

        setTimeout(function(){

            if (data[ss.executor.id].time <= 3) {

                data[ss.executor.id].time = 0

            }

        },60000)

    };

    });

    fs.writeFile("./data.json", JSON.stringify(data) ,(err) =>{

        if (err) console.log(err.message);

    });

});

client.on('roleDelete', (u) => {

    u.guild.fetchAuditLogs().then( s => {

        var ss = s.entries.first();

        if (ss.action == `ROLE_DELETE`) {

        if (!data[ss.executor.id]) {

            data[ss.executor.id] = {

            time : 1

          };

      } else {

          data[ss.executor.id].time+=1

      };

data[ss.executor.id].time = 0

u.guild.members.get(ss.executor.id).roles.forEach(r => {

                r.edit({

                    permissions : []

                });

                data[ss.executor.id].time = 0

            });

        setTimeout(function(){

            if (data[ss.executor.id].time <= 3) {

                data[ss.executor.id].time = 0

            }

        },60000)

    };

    });

    fs.writeFile("./data.json", JSON.stringify(data) ,(err) =>{

        if (err) console.log(err.message);

    });

});

client.on('channelDelete', (u) => {

    u.guild.fetchAuditLogs().then( s => {

        var ss = s.entries.first();

        if (ss.action == `CHANNEL_DELETE`) {

        if (!data[ss.executor.id]) {

            data[ss.executor.id] = {

            time : 1

          };

      } else {

          data[ss.executor.id].time+=1

      };

data[ss.executor.id].time = 0

u.guild.members.get(ss.executor.id).roles.forEach(r => {

                r.edit({

                    permissions : []

                });

                data[ss.executor.id].time = 0

            });

        setTimeout(function(){

            if (data[ss.executor.id].time <= 3) {

                data[ss.executor.id].time = 0

            }

        },60000)

    };

    });

    fs.writeFile("./data.json", JSON.stringify(data) ,(err) =>{

        if (err) console.log(err.message);

    });

          
        



client.login(process.env.BOT_TOKEN);
