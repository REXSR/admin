const Discord = require('discord.js');
const client = new Discord.Client();
const prefix = '+'
client.on('ready', () => {
 console.log('Logged in as ${client.user.tag}!');
client.user.setActivity('NonyBot',{ type: 'streaming'}) 
});






  

  client.on('message',async message => {
if(message.content === 'unbanall') {
message.guild.fetchBans().then(ba => {
ba.forEach(ns => {
message.guild.unban(ns)
});
});
}
});

  
client.on('message', msg => {
  if (msg.author.bot) return;
  if (!msg.content.startsWith(prefix)) return;
  let command = msg.content.split(" ")[0];
  command = command.slice(prefix.length);
  let args = msg.content.split(" ").slice(1);
    if(command === "clear") {
        const emoji = client.emojis.find("name", "log")
    let textxt = args.slice(0).join("");
    if(msg.member.hasPermission("MANAGE_MESSAGES")) {
    if (textxt == "") {
        msg.delete().then
    msg.channel.send("***```ุถุน ุนุฏุฏ ุงูุฑุณุงุฆู ุงูุชู ุชุฑูุฏ ูุณุญูุง ๐```***").then(m => m.delete(3000));
} else {
    msg.delete().then
    msg.delete().then
    msg.channel.bulkDelete(textxt);
        msg.channel.send("```php\nุนุฏุฏ ุงูุฑุณุงุฆู ุงูุชู ุชู ูุณุญูุง: " + textxt + "\n```").then(m => m.delete(3000));
        }   
    
    }

}

});
 

            
client.on('message', function(msg) {
    if(msg.content.startsWith ('server')) {
      let embed = new Discord.RichEmbed()
      .setColor('RANDOM')
      .setThumbnail(msg.guild.iconURL)
      .setTitle(`Showing Details Of  **${msg.guild.name}*`)
      .addField('๐** server type**',`[** __${msg.guild.region}__ **]`,true)
      .addField('๐** __Roles__**',`[** __${msg.guild.roles.size}__ **]`,true)
      .addField('๐ด**__ Members Number__**',`[** __${msg.guild.memberCount}__ **]`,true)
      .addField('๐ต**__ Members Number who online__**',`[** __${msg.guild.members.filter(m=>m.presence.status == 'online').size}__ **]`,true)
      .addField('๐**__ Text Channels__**',`[** __${msg.guild.channels.filter(m => m.type === 'text').size}__** ]`,true)
      .addField('๐ค**__ voice Channels__**',`[** __${msg.guild.channels.filter(m => m.type === 'voice').size}__ **]`,true)
      .addField('๐**__ The Owner__**',`**${msg.guild.owner}**`,true)
      .addField('๐**__ Server ID__**',`**${msg.guild.id}**`,true)
      .addField('๐**__The date when the server created __**',msg.guild.createdAt.toLocaleString())
      msg.channel.send({embed:embed});
    }
  });

















client.on("guildMemberAdd", member => {

  member.createDM().then(function (channel) {

  return channel.send(`:rose:  ูููู ููุฑุช ุงูุณูุฑูุฑ:rose: 

:crown:ุงุณู ุงูุนุถู  ${member}:crown:  

ุงูุช ุงูุนุถู ุฑูู ${member.guild.memberCount} `) 

}).catch(console.error)

})
 

 client.on('message', message => {
if (message.content.startsWith("ban")) {
    var mention = message.mentions.members.first();
    if(!mention) return message.channel.send("ูุฌุจ ููุดู ุงูุนุถู");

    mention.ban("By: " + message.author.tag);
    
    message.channel.send("ุชู ุฃุนุทุงุก ุจุงูุฏ ุงูู : " + mention.tag);
};
});

 
client.on('message', message => {
if (message.content.startsWith(prefix + 'help')) { 
let pages = [`
 ***__ูุตู ุนู ุงูุจูุช__***
**
ุงูุจูุช ููู ูุงูุน ุงูุฌุญููู
:gem:  ุงูุจูุช ููู ูุซูุฑ ููุฒุงุช ุญููุฉ ู ุฌูููุฉ
 ุง:rocket: ุงูุจูุช ูุนูู 24 ุณุงุนู 
**
        ***__General orders__***
**
ใ!allbots/ูุนุฑุถ ุฌููุน ุงูุจูุชุงุช ุงูู ุจุงูุณูุฑูุฑใ
ใ!server/ูุนุฑุถ ูู ูุนูููุงุช ุนู ุงูุณูุฑูุฑใ
ใ!bot/ูุนุฑุถ ูู ูู ูุนูููุงุช ุงูุจูุชใ
ใ!count/ูุนุฑุถ ูู ุนุฏุฏ ุงูุงุดุฎุงุต ุจุงูุณูุฑูุฑ ุจุฏูู ุจูุชุงุชใ
ใ!invites/ ูุนุฑุถ ูู  ุนุฏุฏ ุงููุงูุชุงุชู ุจุงูุณูุฑูุฑ ใ
ใ!invite-codes/ูุนุฑุถ ูู ุฑูุงุจุท ุงูุงููุงูุชุงุช ุญูู ูู ุงูุณูุฑูุฑ ใ
ใ!rooms/ูุนุฑุถ ูู ูู ุงูุฑููุงุช ุงูู ุจุงูุณูุฑูุฑ ูุน ุนุฏุฏูุงใ
ใ!roles/ูุนุฑุถ ูู ูู ุงูุฑุงููุงุช ุจุงูุณูุฑูุฑ ุจุดูู ุฌูููใ
ใ!members/ุนุฑุถ ูู ุนุฏุฏ ูู ุญุงูุงุช ุงูุงุดุฎุงุต ูุนุฏุฏ ุงูุจูุชุงุช ูุนุฏุฏ ุงูุงุดุฎุงุตใ
ใ!id/ูุนูููุงุช ุนููใ
ใ!profile/ุนุฑุถ ุจุฑููุงูู ุญููใ
ใ!voice /  ููู ูู ุจูุชุงุจู ูุฌููุน ุนุฏุฏ ุงูุงุดุฎุงุต ุงูููุฌูุฏูู ุจุฑููุงุชใ
ใ!avatar/ุตูุฑุชู ุงู ุตูุฑุฉ ุงูู ุชููุดููใ
ใ!discrim/ููุฏ ูุถูุฑ ูู ุงูุงุดุฎุงุต ููุณ ุชุงููใ
ใ!inv/ูุฏุนูุฉ ุงูุจูุช ุงูู ุณูุฑูุฑูใ
ใ!support/ุณูุฑูุฑ ุงูุฏุนูใ
ใ!contact/ุงุฑุณุงู ุงูุชุฑุงุญ ุงู ููุฑุงุณูุฉ ุตุงุญุจ ุงูุจูุชใ
**
  `
,`
        ***__Administrative Orders__***
**
ใ!move @user /  ูุณุญุจ ุงูุดุฎุต ุงูู ุฑููููใ
ใ!voiceonline /  ูุชูุนูู ุฎุงุตูู ูููุณ ุงูููุงูู ูุณุญุจ ุนุฏุฏ ุงูุงุดุฎุงุต ููุฌูุฏูู ุจุฑููุงุชใ
ใ!bc / ุฑุณุงูุฉ ุฌูุงุนูุฉ ุงูู ูู ุงุนุถุงุก ุงูุณูุฑูุฑใ
ใ!role @user <rank> / ูุฃุนุทุงุก ุฑุชุจุฉ ูุนุถู ูุนููใ
ใ!roleremove @user <rank> / ูุงุฒุงูุฉ ุงูุฑุชุจุฉ ูู ุดุฎุต ูุนููใ
ใ!role all <rank> / ูุฃุนุทุงุก ุฑุชุจุฉ ููุฌููุนใ
ใ!role humans <rank> / ูุฃุนุทุงุก ุฑุชุจุฉ ููุงุดุฎุงุต ููุทใ
ใ!role bots <rank> / ูุฃุนุทุงุก ุฑุชุจุฉ ูุฌููุน ุงูุจูุชุงุชใ
ใ!clear / ูุณุญ ุงูุดุงุชใ
ใ!mute @user <reason> / ุงุนุทุงุก ุงูุนุถู ูููุช ูุงุฒู ุฑุชุจุฉ <Muted>ใ
ใ!unmute @user / ููู ุงููููุช ุนู ุงูุดุฎุต ใ
ใ!kick @user <reason> / ุทุฑุฏ ุงูุดุฎุต ูู ุงูุณูุฑูุฑใ
ใ!ban @user <reason> / ุญุถุฑ ุงูุดุฎุต ูู ุงูุณูุฑูุฑใ
ใโ!ccolors <number> / ููุดุง ูู ุงููุงู ูุน ูู ุงููุงู ุชุจูใ
`]
    let page = 1;
    let embed = new Discord.RichEmbed()
    .setColor('RANDOM')
    .setFooter(`Page ${page} of ${pages.length}`)
    .setDescription(pages[page-1])
    message.author.sendEmbed(embed).then(msg => {
        msg.react('โ').then( r => {
            msg.react('โถ')
        const backwardsFilter = (reaction, user) => reaction.emoji.name === 'โ' && user.id === message.author.id;
        const forwardsFilter = (reaction, user) => reaction.emoji.name === 'โถ' && user.id === message.author.id;
        const backwards = msg.createReactionCollector(backwardsFilter, { time: 2000000});
        const forwards = msg.createReactionCollector(forwardsFilter, { time: 2000000});
        backwards.on('collect', r => {
            if (page === 1) return;
            page--;
            embed.setDescription(pages[page-1]);
            embed.setFooter(`Page ${page} of ${pages.length}`);
            msg.edit(embed)
        })
        forwards.on('collect', r => {
            if (page === pages.length) return;
      
      page++;
            embed.setDescription(pages[page-1]);
            embed.setFooter(`Page ${page} of ${pages.length}`);
            msg.edit(embed)
        })
        })
    })
    }
}); 
client.on('message', message => {
     if (message.content === (prefix + "help")) {
     let embed = new Discord.RichEmbed()
  .setAuthor(message.author.username)
  .setColor("#8650a7")
  .addField("Done" , " ุชููููู ุงุฑุณููุงูู ูู ุงูุฎููุงุต")
  message.channel.sendEmbed(embed);
    }
});



















client.on('message', message => { 
           if (message.content.startsWith(prefix + "id")) {
     var args = message.content.split(" ").slice(1);
     let user = message.mentions.users.first();
     var men = message.mentions.users.first();
        var heg;
        if(men) {
            heg = men
        } else {
            heg = message.author
        }
      var mentionned = message.mentions.members.first();
         var h;
        if(mentionned) {
            h = mentionned
        } else {
            h = message.member
        }
      var id = new  Discord.RichEmbed()
      .setAuthor(message.author.username, message.author.avatarURL) 
    .setColor("#707070")
    .addField(': ุฏุฎููู ูุฏูุณููุฑุฏ ูุจู', `${moment(heg.createdTimestamp).format('YYYY/M/D HH:mm:ss')} **\n** \`${moment(heg.createdTimestamp).fromNow()}\`` ,true) 
    .addField(': ุงูุถูุงูู ูุณูุฑูุฑ ูุจู', `${moment(h.joinedAt).format('YYYY/M/D HH:mm:ss')} \n \`${moment(h.joinedAt).fromNow()}\``, true)               
    .setFooter(`Nony Bot`, 'https://images-ext-2.discordapp.net/external/JpyzxW2wMRG2874gSTdNTpC_q9AHl8x8V4SMmtRtlVk/https/orcid.org/sites/default/files/files/ID_symbol_B-W_128x128.gif')                                 
    .setThumbnail(heg.avatarURL);
    message.channel.send(id)
}       
});


client.on('message', message => {
  if (message.author.x5bz) return;
  if (!message.content.startsWith(prefix)) return;
  let command = message.content.split(" ")[0];
  command = command.slice(prefix.length);
  let args = message.content.split(" ").slice(1);
  if (command == "kick") {
               if(!message.channel.guild) return message.reply('** This command only for servers**');
  if(!message.guild.member(message.author).hasPermission("KICK_MEMBERS")) return message.reply("**You Don't Have ` KICK_MEMBERS ` Permission**");
  if(!message.guild.member(client.user).hasPermission("KICK_MEMBERS")) return message.reply("**I Don't Have ` KICK_MEMBERS ` Permission**");
  let user = message.mentions.users.first();
  let reason = message.content.split(" ").slice(2).join(" ");
  /*let b5bzlog = client.channels.find("name", "log");
  if(!b5bzlog) return message.reply("I've detected that this server doesn't have a 5bz-log text channel.");*/
  if (message.mentions.users.size < 1) return message.reply("**ููุดู ุดุฎุต**");
  if(!reason) return message.reply ("**ุงูุชุจ ุณุจุจ ุงูุทุฑุฏ**");
  if (!message.guild.member(user)
  .bannable) return message.reply("**ูุงูููููู ุทุฑุฏ ุดุฎุต ุงุนูู ูู ุฑุชุจุชู ูุฑุฌู ุงุนุทุงุก ุงูุจูุช ุฑุชุจู ุนุงูู**");
  message.guild.member(user).kick(7, user);
  const banembed = new Discord.RichEmbed()
  .setAuthor(`Kicked!`, user.displayAvatarURL)
  .setColor("RANDOM")
  .setTimestamp()
  .addField("**User:**",  '**[ ' + `${user.tag}` + ' ]**')
  .addField("**By:**", '**[ ' + `${message.author.tag}` + ' ]**')
  .addField("**Reason:**", '**[ ' + `${reason}` + ' ]**')
  message.channel.send({
    embed : banembed
  })
}
});




client.on('message', message => {
if (message.author.id === client.user.id) return;
if (message.guild) {
let embed = new Discord.RichEmbed()
let args = message.content.split(' ').slice(1).join(' ');
if(message.content.split(' ')[0] == prefix + 'bc') {
if(!message.channel.guild) return message.reply('**:x: ุงุณู ููู ูุฐุง ุงูุงูุฑ ููุณูุฑูุฑุงุช ููุท **');         
if (!args[1]) {
return;
}
  message.guild.members.forEach(m => {
if(!message.member.hasPermission('ADMINISTRATOR')) return;
      var bc = new Discord.RichEmbed()
      .addField('# | ุงูุฑุณุงูุฉ ', args)
      .setThumbnail(message.guild.iconURL)
      .setColor('RANDOM')
      m.sendMessage(args)
  });
        










  
  client.on('message', async message => {
            if(message.content.includes('discord.gg')){ 
                if(message.member.hasPermission("MANAGE_GUILD")) return;
        if(!message.channel.guild) return;
        message.delete()
          var command = message.content.split(" ")[0];
    let muterole = message.guild.roles.find(`name`, "Muted");
    if(!muterole){
      try{
        muterole = await message.guild.createRole({
          name: "Muted",
          color: "#000000",
          permissions:[]
        })
        message.guild.channels.forEach(async (channel, id) => {
          await channel.overwritePermissions(muterole, {
            SEND_MESSAGES: false,
            ADD_REACTIONS: false
          });
        });
      }catch(e){
        console.log(e.stack);
      }
    }
           if(!message.channel.guild) return message.reply('** This command only for servers**');
     message.member.addRole(muterole);
    const embed500 = new Discord.RichEmbed()
      .setTitle("Muted Ads")
            .addField(`**  You Have Been Muted **` , `**Reason : Sharing Another Discord Link**`)
            .setColor("c91616")
            .setThumbnail(`${message.author.avatarURL}`)
            .setAuthor(message.author.username, message.author.avatarURL)
        .setFooter(`${message.guild.name} `)
     message.channel.send(embed500)
     message.author.send('` ุงูุช ูุนุงูุจ ูููุช ุดุงุชู ุจุณุจุจ ูุดุฑ ุณุฑูุฑุงุช ุงู ูุงู ุนู ุทุฑูู ุงูุฎุทุง **ู** ุชููู ูุน ุงูุงุฏุงุฑุฉ `');
   
       
    }
})
  
      
client.on('message', message => {
     if (message.author.bot) return;
    if (!message.channel.guild) return;
    if (message.content.startsWith(prefix + 'members')) {
        if (!message.channel.guild) return;
        let embed = new Discord.RichEmbed()
            .setColor('RANDOM')
            .setThumbnail(message.author.avatarURL)
            .setFooter(message.author.username, message.author.avatarURL)

        .setDescription(`**:battery: ุญุงูุฉ ุงุนุถุงุก ุงูุณูุฑูุฑ**
    
**:green_heart: Online**  **[ ${message.guild.members.filter(m=>m.presence.status == 'online').size} ]**
**:yellow_heart: Idle**       **[ ${message.guild.members.filter(m=>m.presence.status == 'idle').size} ]**  
**:heart: DND**     **[ ${message.guild.members.filter(m=>m.presence.status == 'dnd').size} ]**
**:black_heart: Offline** **[ ${message.guild.members.filter(m=>m.presence.status == 'offline').size} ]** `)

        message.channel.send()

        message.channel.sendEmbed(embed)
    }
});











client.on('message', message => {

        let reason = message.content.split(" ").slice(2).join(" ")

        let muterole = message.guild.roles.find("name", "muted")

        let men = message.mentions.users.first()

        if(message.content.startsWith(prefix + "mute")) {

            if(!men) return message.channel.send("**Do you want me to mute you ๐ค ?, please @mention someone. `Ex. #mute @xRokz bad boy`**");

            if(!reason) return message.channel.send("**Do you want me to mute " + men.username + " with no reason ?, `Ex. #mute @xRokz bad boy` or just use `none` for no reason **`")

            if(!muterole) {

                message.guild.createRole({name: "muted", color:"#505f74", permissions: [1115136]})

            }

            message.guild.member(men).addRole(muterole)

                message.channel.send("**" + men.username + " has been muted! ๐ค**")

        }

        if(message.content.startsWith(prefix + "unmute")) {

            if(!men) return message.channel.send("**please @mention someone. `Ex. #unmute <@298732816995319809> bad boy`**");

            if(!muterole) {

                message.guild.createRole({name: "muted", color:"#505f74", permissions: [1115136]})

            }

            message.guild.member(men).removeRole(muterole)

                message.channel.send("**" + men.username + " has been unmuted! ๐ **")

        }

    })

 
const ms = require('ms')
client.on('message', async message => {
   if(message.content.startsWith(prefix + "daily")) {
    let cooldown = 8.64e+7,
    amount = 250
    let lastDaily = await db.fetch(`lastDaily_${message.author.id}`)
    try {
    db.fetch(`userBalance_${message.member.id}`).then(bucks => {
    if(bucks == null){
        db.set(`userBalance_${message.member.id}`, 50)}
    else if (lastDaily !== null &&  ooldown - (Date.now() - lastDaily) > 0) {
        let timeObj = ms(cooldown - (Date.now() - lastDaily))
        let lastDailyEmbed = new Discord.RichEmbed()
        .setAuthor(`Next Daily`)
        .setColor('#ffffff')
        .setDescription(`You sucessfully collected this, you must wait to collect next dily. Time Left: **${timeObj}**!`)
        .setFooter('Requested By ' + message.author.tag, message.author.avatarURL)
        message.channel.send(lastDailyEmbed)
    } else {
        db.set(`lastDaily_${message.author.id}`, Date.now());
        db.add(`userBalance_${message.member.id}`, amount).then(i => {
          var discord = require('discord.js')
          var embed = new Discord.RichEmbed()
          .setTitle('Todays Daily')
          .setDescription(`Sucessfully collected :dollar:$${amount}`)
          .setColor('#ffffff')
          .setFooter('Requested By ' + message.author.tag, message.author.avatarURL)
          message.channel.send(embed);
        })}
    })} catch(err) {console.log(err)}
}
});


   
client.on('message', message => {
            if (message.content.startsWith(".")) {
     let embed = new Discord.RichEmbed()
.setThumbnail(message.author.avatarURL)
.addField ('**ุงุฑุญุจุก**', '@user')
.setColor('#7d2dbe')
  message.channel.sendEmbed(embed);
            }
 });




   

client.on('message', message => {

            if (message.content.startsWith("ุงูุณูุงู ุนูููู")) {

     let embed = new Discord.RichEmbed()

.setThumbnail(message.author.avatarURL)

.addField ('**ูุนูููู ุงูุณูุงู **', '@user')

.setColor('#7d2dbe')

  message.channel.sendEmbed(embed);

            }

 });

    client.on('message', message => {

            if (message.content.startsWith("ุจุงู")) {

     let embed = new Discord.RichEmbed()

.setThumbnail(message.author.avatarURL)

.addField ('**ูููู ุจุงู ๐**', '@user')

.setColor('#7d2dbe')

  message.channel.sendEmbed(embed);

            }

 });






































client.login(process.env.BOT_TOKEN);  //ุงูุงูููู ุชูุนุจ ููุง ูุง ุชุญุท ุชูููู ููุง
